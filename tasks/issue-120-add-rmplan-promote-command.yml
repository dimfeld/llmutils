---
# yaml-language-server: $schema=https://raw.githubusercontent.com/dimfeld/llmutils/main/schema/rmplan-plan-schema.json
title: Add rmplan promote command
goal: "Implement: Add rmplan promote command"
id: 47
uuid: d35a6c54-3804-487c-b6e4-bc4c74b36755
status: done
issue:
  - https://github.com/dimfeld/llmutils/issues/120
promptsGeneratedAt: 2025-06-07T02:34:55.340Z
createdAt: 2025-06-07T02:04:24.921Z
updatedAt: 2025-10-27T08:39:04.282Z
tasks:
  - title: Add `promote` command and Task ID parser
    done: true
    description: Add the `promote` command to the `rmplan` CLI and create the
      utility for parsing task ID arguments. This sets up the command structure
      and the core logic for identifying which tasks to promote. The task ID
      format is `PLAN_ID.TASK_INDEX` or `PLAN_ID.START_INDEX-END_INDEX`, where
      indices are 1-based.
  - title: Implement single task promotion logic
    done: true
    description: Implement the core logic for promoting a single task to a new
      top-level plan. This involves creating the new plan file, updating the
      original plan by removing the task, and adding a dependency on the new
      plan.
  - title: Implement multi-task and range promotion
    done: true
    description: Extend the promotion logic to handle multiple task IDs and ranges
      (e.g., `1.2-4`). This includes creating chained dependencies between the
      newly created plans to preserve their original execution order.
  - title: Handle edge cases and finalize
    done: true
    description: Finalize the implementation by handling edge cases, such as
      promoting all tasks from a plan and promoting tasks from different plans
      in a single command invocation.
changedFiles:
  - debug_promote.js
  - src/common/github/issues.ts
  - src/rmplan/actions.ts
  - src/rmplan/commands/agent.ts
  - src/rmplan/commands/import.ts
  - src/rmplan/commands/promote.test.ts
  - src/rmplan/commands/promote.ts
  - src/rmplan/rmplan.ts
  - src/rmplan/utils/id_parser.test.ts
  - src/rmplan/utils/id_parser.ts
rmfilter:
  - src/rmplan
---

This should take one or more tasks and promote them to top-level plans. If any tasks remain in the original plan, it should depend on the tasks. All promoted tasks should also depend on each other according to the original order of the tasks.
The arguments to the command should be the task IDs, where a plan is just the ID and a task within the plan is the ID of the plan, a period, and a one-baed index of the task ID.
For example `35.2` will get the second task in the plan with ID `35` and promote it. `35.2-6` will get tasks two through six (one-based) in the plan with ID `35` and promote them.
