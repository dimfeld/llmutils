# yaml-language-server: $schema=https://raw.githubusercontent.com/dimfeld/llmutils/main/schema/rmplan-plan-schema.json
title: ID Conflict Resolution
goal: Implement a system to automatically detect and resolve conflicting numeric
  plan IDs, ensuring data integrity, especially after merging branches.
details: This phase introduces robustness to the ID system. When `rmplan` loads
  plans, it will check for duplicate numeric IDs. If found, conflicts will be
  resolved by re-assigning new numeric IDs to some of the conflicting plans,
  prioritizing the one with the earliest timestamp.
id: 1rkuwy1-2
status: pending
dependencies:
  - 1rkuwy1-1
planGeneratedAt: 2025-06-04T07:59:19.941Z
createdAt: 2025-06-04T07:59:19.941Z
updatedAt: 2025-06-04T07:59:19.941Z
project:
  title: Implement Simpler Numeric Plan IDs and Enhanced Multiphase Plan Handling
  goal: Transition the `rmplan` system from autogenerated alphanumeric plan IDs to
    simpler, sequential numeric IDs, implement automatic conflict resolution for
    these IDs, and revise multiphase plan processing to save each task as an
    individual plan.
  details: >
    This project aims to improve the usability and robustness of plan
    identification within `rmplan`.

    Key changes include:

    1.  **Numeric Plan IDs:** New plans will receive numeric IDs, incrementing
    from the highest existing ID (e.g., if max ID is 100, new ID is 101). Plan
    filenames will be `[ID].yml`.

    2.  **ID Conflict Resolution:** When duplicate numeric IDs are detected
    (e.g., after a git merge), conflicts will be automatically resolved by
    re-assigning IDs to the plans with later creation/modification timestamps.

    3.  **Multiphase Plan Task Separation:** When processing LLM-generated plans
    that have a multiphase structure, each task within those phases will be
    saved as a distinct, individual plan file with its own numeric ID.


    This refactor will touch ID generation, plan storage, plan resolution, and
    how multiphase plans are processed and saved.
tasks:
  - title: Implement Conflict Detection in Plan Loading
    description: Modify `readAllPlans` in `src/rmplan/plans.ts` to detect duplicate
      numeric IDs. As it reads plans, it should identify if multiple plan files
      contain the same numeric `id` value.
    files: []
    steps: []
  - title: Develop ID Conflict Resolution Strategy
    description: "Create a new function, e.g., `resolveIdConflicts(plansMap)`, in
      `src/rmplan/plans.ts`. This function will: - Take the map of plans
      (potentially with conflicts) from `readAllPlans`. - For each group of
      conflicting plans (same ID): - Determine which plan keeps the original ID
      (e.g., based on the earliest `createdAt` or `updatedAt` timestamp). - For
      the other conflicting plans, assign new, unique numeric IDs using
      `generateNumericPlanId()`. - Update the internal `id` field of the
      re-assigned plans. - Rename the files of re-assigned plans to match their
      new `[NEW_ID].yml` format. - Return a map of plans with all conflicts
      resolved."
    files: []
    steps: []
  - title: Integrate Conflict Resolution into Plan Loading
    description: Modify `readAllPlans` to call the `resolveIdConflicts` function
      before returning its final map of plans. This ensures that any part of the
      system using `readAllPlans` receives a conflict-free set of plans.
    files: []
    steps: []
  - title: Implement Logging for Conflict Resolution
    description: Add logging within the conflict resolution process to inform the
      user when ID conflicts are detected and how they are resolved (which plans
      were re-assigned to which new IDs).
    files: []
    steps: []
  - title: Test ID Conflict Resolution
    description: "Create tests for various conflict scenarios: - Two plans with the
      same ID. - Multiple plans with the same ID. - Scenarios involving plans
      with and without `createdAt`/`updatedAt` timestamps to test
      prioritization. - Verify file renaming and internal ID updates."
    files: []
    steps: []
rmfilter:
  - src/rmplan
  - src/common
