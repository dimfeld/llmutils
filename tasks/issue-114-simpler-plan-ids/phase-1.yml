---
# yaml-language-server: $schema=https://raw.githubusercontent.com/dimfeld/llmutils/main/schema/rmplan-plan-schema.json
title: Core Numeric ID Implementation
goal: Implement the core functionality for generating, storing, and resolving
  numeric plan IDs, and update the `rmplan add` command to use this new system.
  Plan filenames will be changed to `[ID].yml`.
id: 31
uuid: 1305a58e-1b3f-4924-9961-822554f544dd
status: done
dependencies: []
planGeneratedAt: 2025-06-04T07:59:19.941Z
promptsGeneratedAt: 2025-06-04T08:07:12.449Z
createdAt: 2025-06-04T07:59:19.941Z
updatedAt: 2025-10-27T08:39:04.318Z
project:
  title: Implement Simpler Numeric Plan IDs and Enhanced Multiphase Plan Handling
  goal: Transition the `rmplan` system from autogenerated alphanumeric plan IDs to
    simpler, sequential numeric IDs, implement automatic conflict resolution for
    these IDs, and revise multiphase plan processing to save each task as an
    individual plan.
  details: >
    This project aims to improve the usability and robustness of plan
    identification within `rmplan`.

    Key changes include:

    1.  **Numeric Plan IDs:** New plans will receive numeric IDs, incrementing
    from the highest existing ID (e.g., if max ID is 100, new ID is 101). Plan
    filenames will be `[ID].yml`.

    2.  **ID Conflict Resolution:** When duplicate numeric IDs are detected
    (e.g., after a git merge), conflicts will be automatically resolved by
    re-assigning IDs to the plans with later creation/modification timestamps.

    3.  **Multiphase Plan Task Separation:** When processing LLM-generated plans
    that have a multiphase structure, each task within those phases will be
    saved as a distinct, individual plan file with its own numeric ID.


    This refactor will touch ID generation, plan storage, plan resolution, and
    how multiphase plans are processed and saved.
tasks:
  - title: Update Plan Schema for Numeric IDs
    done: true
    description: "Modify `planSchema.ts` to define the `id` field as a number or
      string. This ensures that parsed YAML will treat numeric IDs numerically,
      and `yaml.stringify` will output them as numbers (e.g., `id: 123`), while
      still allowing string IDs for older plans."
  - title: Implement Maximum Numeric ID Discovery
    done: true
    description: Enhance `readAllPlans` function in `src/rmplan/plans.ts` to parse
      numeric IDs from plan files and identify the maximum existing numeric ID.
      This function must gracefully handle older plans with non-numeric or
      missing IDs. The `PlanSummary` type and the returned map key type will
      also need adjustment.
  - title: Create Numeric ID Generator
    done: true
    description: In `src/rmplan/id_utils.ts`, create a new function
      `generateNumericPlanId()`. This function will use the mechanism developed
      in Task 2 to determine the current maximum numeric ID and return `maxId +
      1`. The existing `generateProjectId` will be updated/renamed.
  - title: Update `rmplan add` Command for Numeric IDs
    done: true
    description: Modify the `rmplan add` command in `src/rmplan/rmplan.ts` to use
      the new numeric ID system. It will assign a sequential numeric ID, save
      the plan with this ID in its content, and name the file `[ID].yml`.
  - title: Adapt Plan Resolution for Numeric IDs and Filenames
    done: true
    description: Update `resolvePlanFile` in `src/rmplan/plans.ts` to correctly
      resolve plans by numeric ID and new `[ID].yml` filenames, while
      maintaining compatibility with older alphanumeric IDs and filenames.
  - title: Add Basic Tests for Numeric IDs
    done: true
    description: "Create new tests or augment existing ones to specifically verify
      the core numeric ID functionality: sequential generation, `rmplan add`
      behavior, and `resolvePlanFile` accuracy with new ID types and filenames."
changedFiles:
  - src/rmplan/actions.ts
  - src/rmplan/id_utils.test.ts
  - src/rmplan/id_utils.ts
  - src/rmplan/planSchema.ts
  - src/rmplan/plans.test.ts
  - src/rmplan/plans.ts
  - src/rmplan/process_markdown.ts
  - src/rmplan/prompt.ts
  - src/rmplan/rmplan.ts
  - src/rmplan/rmplan_add.test.ts
  - src/rmplan/workspace/workspace_add.test.ts
rmfilter:
  - src/rmplan
  - src/common
---

This phase focuses on establishing the foundation for numeric IDs. We will modify ID generation to be sequential, ensure plans are read and written with numeric IDs, and adapt the `add` command. Existing alphanumeric IDs will need to be handled gracefully during the transition, though new plans will exclusively use numeric IDs.
