# yaml-language-server: $schema=https://raw.githubusercontent.com/dimfeld/llmutils/main/schema/rmplan-plan-schema.json
title: System-Wide Integration, Testing, and Documentation
goal: Ensure all `rmplan` functionalities are compatible with the new numeric ID
  system, perform comprehensive testing, and update all relevant documentation.
details: This final phase focuses on ensuring the stability and correctness of
  the entire system after the preceding changes, and on providing clear
  documentation for users.
id: 34
status: pending
dependencies:
  - "32"
  - "33"
planGeneratedAt: 2025-06-04T07:59:19.941Z
createdAt: 2025-06-04T07:59:19.941Z
updatedAt: 2025-06-04T07:59:19.941Z
project:
  title: Implement Simpler Numeric Plan IDs and Enhanced Multiphase Plan Handling
  goal: Transition the `rmplan` system from autogenerated alphanumeric plan IDs to
    simpler, sequential numeric IDs, implement automatic conflict resolution for
    these IDs, and revise multiphase plan processing to save each task as an
    individual plan.
  details: >
    This project aims to improve the usability and robustness of plan
    identification within `rmplan`.

    Key changes include:

    1.  **Numeric Plan IDs:** New plans will receive numeric IDs, incrementing
    from the highest existing ID (e.g., if max ID is 100, new ID is 101). Plan
    filenames will be `[ID].yml`.

    2.  **ID Conflict Resolution:** When duplicate numeric IDs are detected
    (e.g., after a git merge), conflicts will be automatically resolved by
    re-assigning IDs to the plans with later creation/modification timestamps.

    3.  **Multiphase Plan Task Separation:** When processing LLM-generated plans
    that have a multiphase structure, each task within those phases will be
    saved as a distinct, individual plan file with its own numeric ID.


    This refactor will touch ID generation, plan storage, plan resolution, and
    how multiphase plans are processed and saved.
tasks:
  - title: Review and Update All `rmplan` Commands
    description: "Systematically review all commands in `src/rmplan/rmplan.ts`
      (e.g., `agent`, `list`, `show`, `edit`, `next`, `current`, `prepare`,
      `done`) and related functions in `src/rmplan/actions.ts`: - Ensure they
      correctly handle numeric IDs. - Verify they work with the `[ID].yml`
      filename convention. - Confirm compatibility with plans generated from
      multiphase task separation. - Update any internal logic that might have
      relied on the old ID format or phase structure."
    files: []
    steps: []
  - title: Deprecate or Refactor `generatePhaseId`
    description: Evaluate the `generatePhaseId` function in
      `src/rmplan/id_utils.ts`. If phases are no longer saved as distinct
      entities with their own file IDs, this function may be obsolete and can be
      removed. If a concept of "phase" is still used for grouping or display,
      refactor as needed.
    files: []
    steps: []
  - title: Comprehensive Integration Testing
    description: "Develop and execute integration tests that cover: - End-to-end
      plan lifecycle: `add` -> `prepare` -> `agent` (`run`/`next`) -> `done`. -
      ID conflict resolution during typical Git workflows (simulated merges). -
      Processing of multiphase plans into individual task-plans and their
      subsequent execution. - All `rmplan` CLI commands with various options."
    files: []
    steps: []
  - title: Update Documentation
    description: "Update `README.md` and any other user-facing or developer
      documentation to reflect: - The new numeric plan ID system and `[ID].yml`
      file naming. - The automatic ID conflict resolution mechanism. - The
      change in how multiphase plans are processed and saved as individual
      tasks. - Any changes to CLI command behavior or output."
    files: []
    steps: []
rmfilter:
  - src/rmplan
  - src/common
